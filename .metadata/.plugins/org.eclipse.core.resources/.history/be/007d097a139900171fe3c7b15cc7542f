package sima.utils;

import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.supercsv.io.CsvListReader;
import org.supercsv.prefs.CsvPreference;

import org.mule.api.MuleMessage;
import org.mule.api.transformer.TransformerException;
import org.mule.transformer.AbstractMessageTransformer;


public  class ReaderCSV extends AbstractMessageTransformer{

	
	@Override
	public Object transformMessage(MuleMessage message, String outputEncoding) throws TransformerException {
		// TODO Auto-generated method stub
		//Read the CSV as List of Maps where each Map represents row data
	      List<Map<String, String>> rows = new ArrayList<Map<String, String>>();
	      Map<String, String> row = null;
		
		 try {
			String str = message.getPayloadAsString();
			
			
			CsvListReader csvReader = new CsvListReader(new InputStreamReader(
					ReaderCSV.class.getClassLoader().getResourceAsStream(str)),
			        CsvPreference.STANDARD_PREFERENCE);
			    
			    //Read CSV Header
			    List<String> header = new ArrayList<String>(csvReader.read());
			      List<String> rowAsTokens;
			      
			      
			      
			      while ((rowAsTokens = csvReader.read()) != null) {
			        //Create Map for each row in CSV
			        row = new HashMap<String, String>();
			        
			        for (int i = 0 ; i < header.size() ; i ++) {
			          row.put(header.get(i), rowAsTokens.get(i));
			        }
			        
			        //add Row map to list of rows
			        rows.add(row);
			      }
			      
			      
			      //Iterate
			      for (Map<String, String> rowMap : rows) {
			        System.out.println(rowMap);
			      }
			
			
			
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		
		
		return rows;
	}


	
}
