package sima.utils;

import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.Properties;

import org.mule.api.MuleMessage;
import org.mule.api.transformer.TransformerException;
import org.mule.transformer.AbstractMessageTransformer;

import com.jcraft.jsch.Channel;
import com.jcraft.jsch.ChannelSftp;
import com.jcraft.jsch.JSch;
import com.jcraft.jsch.Session;

/**
 * @author kodehelp
 *
 */
public class SFTPinJava extends AbstractMessageTransformer {

	 Properties prop = new Properties(); //Creating property file object read File attachment path from property file
     InputStream input = null; // To read property file path


	@Override
	public Object transformMessage(MuleMessage message, String outputEncoding) throws TransformerException {
		// TODO Auto-generated method stub
		
        String SFTPHOST = "10.20.30.40";
        int SFTPPORT = 22;
        String SFTPUSER = "username";
        String SFTPPASS = "password";
        String SFTPWORKINGDIR = "/export/home/kodehelp/";
		
		
        try {
            input = getClass().getClassLoader().getResourceAsStream("mule-app.properties"); // Property file path in classpath
             prop.load(input); // get and load the property file
             String type = prop.getProperty("mule.env");
             
             input = getClass().getClassLoader().getResourceAsStream(type + ".properties"); // here you get the file 

             
             SFTPHOST=prop.getProperty("sftp.host");
             SFTPUSER=prop.getProperty("sftp.user");
             SFTPPASS=prop.getProperty("sftp.pass"); 
             SFTPWORKINGDIR= prop.getProperty("sftp.path");
        } catch (IOException e)
        {

            e.printStackTrace();
        }
		
		


        Session session = null;
        Channel channel = null;
        ChannelSftp channelSftp = null;

        try {
            JSch jsch = new JSch();
            session = jsch.getSession(SFTPUSER, SFTPHOST, SFTPPORT);
            session.setPassword(SFTPPASS);
            java.util.Properties config = new java.util.Properties();
            config.put("StrictHostKeyChecking", "no");
            session.setConfig(config);
            session.connect();
            channel = session.openChannel("sftp");
            channel.connect();
            channelSftp = (ChannelSftp) channel;
            channelSftp.cd(SFTPWORKINGDIR);
            byte[] buffer = new byte[1024];
            BufferedInputStream bis = new BufferedInputStream(channelSftp.get("Test.java"));
            File newFile = new File("C:/Test.java");
            OutputStream os = new FileOutputStream(newFile);
            BufferedOutputStream bos = new BufferedOutputStream(os);
            int readCount;
            while ((readCount = bis.read(buffer)) > 0) {
                System.out.println("Writing: ");
                bos.write(buffer, 0, readCount);
            }
            bis.close();
            bos.close();
        } catch (Exception ex) {
            ex.printStackTrace();
        }

		return null;
	}

    /**
     *
     */
   
    /**
     * @param args
     */


}
